{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 2,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 0
      },
      "id": 47,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Pull requests count$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "dataset": "`stinky-socks`",
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\nSELECT \n   COUNT(*) as \"Pull requests count\",\n   COUNT(DISTINCT CASE WHEN COALESCE(author.team_role, pr.author_role) = 'MEMBER' THEN author.login END) as \"Maintainers count\",\n   COUNT(DISTINCT CASE WHEN COALESCE(author.team_role, pr.author_role) = 'CONTRIBUTOR' THEN author.login END) as \"Contributors count\",\n   SUM(CASE WHEN has_other_human_approval THEN 0 ELSE 1 END)::decimal/COUNT(*)*100 AS \"Self-approved PRs\",\n   AVG(diff_rows_added+diff_rows_deleted) as \"Average PR size\",\n   AVG(requested_reviewers_count) AS \"Average reviewers count\",\n   AVG(participants_comments_count) AS \"Average participants comments count\",\n   SUM(diff_rows_added+diff_rows_deleted) as \"Total lines changed\",\n   SUM(CASE WHEN tests_were_touched THEN 0 ELSE 1 END)::decimal/COUNT(*)*100 AS \"PRs without tests touch\" \nFROM pull_request AS pr\n   INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n   INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n   INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NULL\n   AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n   AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n   AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n   AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n   AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n   AND ($include_bots_activities OR NOT author.is_bot_user)\n   AND ($include_self_reviews OR pr.has_other_human_approval)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "author",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "author",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "pull_request"
        }
      ],
      "title": "Total PRs count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 4,
        "y": 0
      },
      "id": 55,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Maintainers count$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "Maintainers count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 8,
        "y": 0
      },
      "id": 56,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Contributors count$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "Contributors count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 10
              },
              {
                "color": "red",
                "value": 25
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 12,
        "y": 0
      },
      "id": 26,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^PRs without tests touch$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "PRs without tests touch",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 16,
        "y": 0
      },
      "id": 48,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Total lines changed$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "Total lines changed",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 3
      },
      "id": 27,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Average PR size$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "Avg diff size",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 4,
        "y": 3
      },
      "id": 29,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Average reviewers count$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "Avg reviewers count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 8,
        "y": 3
      },
      "id": 28,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Average participants comments count$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "Avg reviewers comments",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "description": "There were no approval from the user, who is not the PR author and not a bot",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 25
              },
              {
                "color": "red",
                "value": 35
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 12,
        "y": 3
      },
      "id": 59,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Self\\-approved PRs$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 47,
          "refId": "A"
        }
      ],
      "title": "Self-reviewed PRs",
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 45,
      "panels": [],
      "title": "Flow stats",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "orange",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 11,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "vertical",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY pr_lead_time) AS \"${percentile:text}\",\nAVG(pr_lead_time) AS \"Average\"\nFROM \n   (SELECT \n      EXTRACT(EPOCH FROM (merged_date-LEAST(initial_commit_date, created_date))) AS pr_lead_time\n   FROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   ) AS lead_times\nWHERE COALESCE(pr_lead_time, 0)>0",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Lead Time (from the first commit to pull request merge)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "description": "From the first commit to PR raised",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 0,
        "y": 12
      },
      "id": 7,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY development_time) AS \"${percentile:text}\",\nAVG(development_time) AS \"Average\"\nFROM \n   (SELECT \n      EXTRACT(EPOCH FROM (shared_for_review_date-initial_commit_date)) AS development_time\n   FROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   ) AS timings\nWHERE COALESCE(development_time,0)>0",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Development time",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "description": "From PR being raised to first comment/review/approval",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 6,
        "y": 12
      },
      "id": 3,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\nSELECT PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY time_to_first_reaction) AS \"${percentile:text}\",\nAVG(time_to_first_reaction) AS \"Average\"\nFROM (\n    SELECT\n        EXTRACT(EPOCH FROM (first_reaction_date-shared_for_review_date)) AS time_to_first_reaction\n   FROM pull_request AS pr\n      INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n      AND first_reaction_date IS NOT NULL\n    ) AS \"First responses\"\nWHERE COALESCE(time_to_first_reaction, 0)>0",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Time to first reaction",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "description": "Time from the first reaction to PR merge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 12,
        "y": 12
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\nSELECT PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY rework_time) AS \"${percentile:text}\",\nAVG(rework_time) AS \"Average\"\nFROM (\n    SELECT\n        EXTRACT(EPOCH FROM (GREATEST(COALESCE(pr_aggregations.last_commit_date, pr_aggregations.last_approval_date), COALESCE(pr_aggregations.last_approval_date, pr_aggregations.last_commit_date))-first_reaction_date)) AS rework_time\n    FROM pull_request AS pr\n      INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n    WHERE pr.integrity_errors IS NULL\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n      AND first_reaction_date IS NOT NULL\n      AND COALESCE(pr_aggregations.last_approval_date, pr_aggregations.last_commit_date) IS NOT NULL\n) AS rework_times\nWHERE COALESCE(rework_time, 0)>0",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Rework time",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "description": "Time from last approve to PR merge",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 18,
        "y": 12
      },
      "id": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\n\nSELECT PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY from_last_approval_to_merge) AS \"${percentile:text}\",\nAVG(from_last_approval_to_merge) AS \"Average\"\nFROM (\n    SELECT\n        EXTRACT(EPOCH FROM (merged_date-last_action_date)) AS from_last_approval_to_merge\n    FROM (\n        SELECT\n            merged_date,\n            GREATEST(pr_aggregations.last_approval_date, pr_aggregations.last_commit_date) as last_action_date\n        FROM pull_request AS pr\n            INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n            INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n            INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n        WHERE pr.integrity_errors IS NULL\n            AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n            AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n            AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n            AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n            AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n            AND ($include_bots_activities OR NOT author.is_bot_user)\n            AND ($include_self_reviews OR pr.has_other_human_approval)\n    ) AS approvals\n) AS timings\nWHERE COALESCE(from_last_approval_to_merge, 0)>0",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Idle between pull request approval and merge",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "orange",
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "25th Percentile"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.showPoints",
                "value": "never"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "90th percentile"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 30
              },
              {
                "id": "custom.fillBelowTo",
                "value": "25th Percentile"
              },
              {
                "id": "custom.showPoints",
                "value": "never"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Chosen percentile"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.pointSize",
                "value": 7
              },
              {
                "id": "displayName",
                "value": "${percentile:text} (your choice)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Rolling Average"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Pull requests count"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": false,
                  "viz": false
                }
              },
              {
                "id": "unit",
                "value": "locale"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.pointSize",
                "value": 1
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 16,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 54,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "last"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.5",
      "repeat": "display_flow_stats_for",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\nSELECT \n    $__timeGroupAlias(start_date, $group_by_period), \n    PERCENTILE_CONT(0.90) WITHIN GROUP (ORDER BY ${display_flow_stats_for:raw}) AS \"90th percentile\",\n    AVG(AVG(${display_flow_stats_for:raw})) OVER (ORDER BY $__timeGroup(start_date, $group_by_period, 0) \n                                ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS \"Rolling Average\",\n    PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY ${display_flow_stats_for:raw}) AS \"Chosen percentile\",\n    PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY ${display_flow_stats_for:raw}) AS \"25th Percentile\",\n    COUNT(*) AS \"Pull requests count\"\n\nFROM \n   (SELECT \n      LEAST(initial_commit_date, shared_for_review_date) AS start_date,\n      EXTRACT(EPOCH FROM (merged_date-LEAST(initial_commit_date, shared_for_review_date))) AS pr_lead_time,\n      EXTRACT(EPOCH FROM (shared_for_review_date-initial_commit_date)) AS development_time,\n      GREATEST(EXTRACT(EPOCH FROM (first_reaction_date-shared_for_review_date)), 0) AS time_to_first_reaction,\n      EXTRACT(EPOCH FROM (GREATEST(COALESCE(pr_aggregations.last_commit_date, pr_aggregations.last_approval_date), COALESCE(pr_aggregations.last_approval_date, pr_aggregations.last_commit_date))-first_reaction_date)) AS rework_time,\n      EXTRACT(EPOCH FROM (merged_date-GREATEST(pr_aggregations.last_approval_date, pr.last_commit_date))) AS idle_after_approve\n   FROM pull_request AS pr\n      INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   ) AS timings\nWHERE COALESCE(${display_flow_stats_for:raw}, 0)>0\nGROUP BY 1\nORDER BY $__timeGroup(start_date, $group_by_period, 0)",
          "refId": "Flow stats",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "$display_flow_stats_for stats by $group_by_period, ${percentile}",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "PRs without tests changes"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PRs without other human approvals"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 33
      },
      "id": 34,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "last"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\n\nSELECT \n   $__timeGroupAlias(start_date, $group_by_period),\n   COUNT(*) AS \"PRs count\",\n   COUNT(DISTINCT CASE WHEN author_role = 'MEMBER' THEN author_id END) AS \"Maintainers contributed\",\n   COUNT(DISTINCT CASE WHEN author_role = 'CONTRIBUTOR' THEN author_id END) AS \"Contributors contributed\",\n   COUNT(DISTINCT author_id) AS \"Total authors contributed\",\n   AVG(requested_reviewers_count) AS \"Average reviewers count\",\n   AVG(participants_comments_count) AS \"Average participants comments count\",\n   SUM(CASE WHEN tests_were_touched THEN 0 ELSE 1 END)::decimal/COUNT(*)*100 AS \"PRs without tests changes\",\n   SUM(CASE WHEN has_other_human_approval THEN 0 ELSE 1 END)::decimal/COUNT(*)*100 AS \"PRs without other human approvals\",\n   AVG(CASE WHEN diff_rows_added+diff_rows_deleted=0 THEN NULL ELSE diff_rows_added+diff_rows_deleted END) AS \"Average PR diff size\",\n   SUM(diff_rows_added+diff_rows_deleted) as \"Total diff for the period\"\nFROM \n   (SELECT \n      LEAST(initial_commit_date, shared_for_review_date) AS start_date,\n      author.id AS author_id,\n      COALESCE(author.team_role, pr.author_role) AS author_role,\n      requested_reviewers_count,\n      participants_comments_count,\n      tests_were_touched,\n      has_other_human_approval,\n      diff_rows_added,\n      diff_rows_deleted\n   FROM pull_request AS pr\n      INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   ) AS timings\nGROUP BY 1\nORDER BY $__timeGroup(start_date, $group_by_period, 0)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Quantitative traits by $group_by_period",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 45
      },
      "id": 24,
      "panels": [],
      "title": "Activity traits",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Did not comment"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Did not approve"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 25,
        "w": 12,
        "x": 0,
        "y": 46
      },
      "id": 16,
      "options": {
        "barRadius": 0,
        "barWidth": 0.8,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "horizontal",
        "showValue": "never",
        "stacking": "normal",
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH reviewer_demand AS (\n    SELECT \n        CASE \n            WHEN participant.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN participant.login ELSE participant.nickname END, ' (former participant)') \n            WHEN participant.is_bot_user THEN CONCAT(participant.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN participant.login ELSE participant.nickname END\n        END AS reviewer_name,\n        COUNT(prtcpnt.pull_request_number) AS added_as_reviewer,\n        SUM(CASE WHEN prtcpnt.first_comment_date IS NULL AND prtcpnt.first_approval_date IS NOT NULL THEN 1 ELSE 0 END) AS did_not_comment,\n        SUM(CASE WHEN prtcpnt.first_approval_date IS NULL THEN 1 ELSE 0 END) AS did_not_approve\n    FROM pull_request AS pr\n        INNER JOIN pull_request_participant AS prtcpnt \n            ON pr.team_name = prtcpnt.team_name AND pr.project_name = prtcpnt.project_name \n            AND pr.repository_name = prtcpnt.repository_name \n            AND pr.pull_request_number = prtcpnt.pull_request_number\n        INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n        INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n        INNER JOIN actor AS shadowed_participant ON shadowed_participant.id = prtcpnt.participant_id\n        INNER JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id)=participant.id\n    WHERE pr.integrity_errors IS NULL\n        AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n        AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n        AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n        AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n        AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n        AND ($include_bots_activities OR NOT author.is_bot_user)\n        AND ($include_bots_activities OR NOT participant.is_bot_user)\n        AND ($include_self_reviews OR pr.has_other_human_approval)\n    GROUP BY participant.nickname, participant.is_bot_user, participant.is_former_participant, participant.login\n    HAVING COUNT(*) >= $min_prs_count_sample_size  -- Threshold for minimum PR participation\n\n),\nranked_reviewers AS (\n    SELECT \n        reviewer_name,\n        added_as_reviewer,\n        did_not_comment,\n        did_not_approve,\n        ROW_NUMBER() OVER (ORDER BY added_as_reviewer DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY added_as_reviewer ASC) AS rank_asc\n    FROM reviewer_demand\n)\nSELECT \n    reviewer_name,\n    added_as_reviewer AS \"Added as reviewer\",\n    did_not_comment AS \"Did not comment\",\n    did_not_approve AS \"Did not approve\"\nFROM ranked_reviewers\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY \"Added as reviewer\" DESC;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": " 10 Most Demanded vs. 10 Least Demanded Reviewers",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "First reaction in"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PR Count"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 25,
        "w": 12,
        "x": 12,
        "y": 46
      },
      "id": 17,
      "options": {
        "barRadius": 0,
        "barWidth": 0.8,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "horizontal",
        "showValue": "never",
        "stacking": "none",
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH reviewer_activity AS (\n    SELECT \n        CASE \n            WHEN participant.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN participant.login ELSE participant.nickname END, ' (former participant)') \n            WHEN participant.is_bot_user THEN CONCAT(participant.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN participant.login ELSE participant.nickname END\n        END AS reviewer_name,\n        COUNT(*) AS pr_count,\n        PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY prtcpnt.comments_count) AS comments_count,\n        PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (prtcpnt.first_reaction_date - \n        CASE WHEN prtcpnt.first_reaction_date < shared_for_review_date THEN created_date ELSE shared_for_review_date END))) AS time_to_first_reaction\n    FROM pull_request AS pr\n    INNER JOIN pull_request_participant AS prtcpnt \n        ON pr.team_name = prtcpnt.team_name AND pr.project_name = prtcpnt.project_name \n        AND pr.repository_name = prtcpnt.repository_name \n        AND pr.pull_request_number = prtcpnt.pull_request_number\n    INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n    INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n    INNER JOIN actor AS shadowed_participant ON shadowed_participant.id = prtcpnt.participant_id\n    INNER JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id)=participant.id\n    WHERE pr.integrity_errors IS NULL\n        AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n        AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n        AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n        AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n        AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n        AND ($include_bots_activities OR NOT author.is_bot_user)\n        AND ($include_bots_activities OR NOT participant.is_bot_user)\n        AND ($include_self_reviews OR pr.has_other_human_approval)\n    GROUP BY participant.nickname, participant.is_bot_user, participant.is_former_participant, participant.login\n    HAVING COUNT(*) >= $min_prs_count_sample_size  -- Threshold for minimum PR participation\n),\nranked_reviewers AS (\n    SELECT \n        reviewer_name,\n        pr_count,\n        comments_count,\n        time_to_first_reaction,\n        ROW_NUMBER() OVER (ORDER BY time_to_first_reaction DESC, comments_count DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY time_to_first_reaction ASC, comments_count ASC) AS rank_asc\n    FROM reviewer_activity\n)\nSELECT \n    reviewer_name,\n    pr_count AS \"PR Count\",\n    comments_count AS \"Comments count\",\n    time_to_first_reaction AS \"First reaction in\"\nFROM ranked_reviewers\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY \"First reaction in\" ASC;\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "10 Most Active Reviewers vs. 10 Least Active Reviewers",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-green",
            "mode": "fixed"
          },
          "custom": {
            "separator": ","
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 16,
        "w": 24,
        "x": 0,
        "y": 71
      },
      "id": 60,
      "options": {
        "labelFields": [],
        "sizeField": "value",
        "textField": "label",
        "tiling": "treemapSquarify"
      },
      "pluginVersion": "2.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH contributions AS (\n    SELECT \n        repository_name, \n        CASE \n            WHEN author.is_former_participant THEN CONCAT(\n                CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, \n                ' (former participant)'\n            )\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n        END AS contributor_name,\n        SUM(diff_rows_added) AS diff_rows_added,\n        SUM(diff_rows_deleted) AS diff_rows_deleted\n    FROM pull_request AS pr\n        INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n        INNER JOIN actor AS author \n            ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id) = author.id\n    WHERE pr.integrity_errors IS NULL\n      AND diff_rows_added + diff_rows_deleted != 0\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date))\n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n    GROUP BY \n        repository_name, \n        author.nickname, \n        author.is_former_participant, \n        author.is_bot_user, \n        author.login\n)\n\nSELECT \n    CONCAT(repository_name, ',', contributor_name, ',', 'Additions') AS label,\n    diff_rows_added AS value\nFROM contributions\n\nUNION ALL\n\nSELECT \n    CONCAT(repository_name, ',', contributor_name, ',', 'Deletions') AS label,\n    diff_rows_deleted AS value\nFROM contributions;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Contributions per participant",
      "type": "marcusolsson-treemap-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 23,
        "w": 24,
        "x": 0,
        "y": 87
      },
      "id": 15,
      "options": {
        "barRadius": 0,
        "barWidth": 0.8,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "horizontal",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT personal.repository_name, contributor_name, personal_contribution::numeric/total_contribution*100 as \"contribution_percent\"\nFROM\n    (SELECT \n        repository_name, \n        CASE \n            WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n        END AS contributor_name,\n        SUM(diff_rows_added+diff_rows_deleted) as personal_contribution\n    FROM pull_request AS pr\n        INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n        INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n    WHERE pr.integrity_errors IS NULL\n      AND diff_rows_added+diff_rows_deleted!=0\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n    GROUP BY repository_name, author.nickname, author.is_former_participant, author.is_bot_user, author.login) AS personal\n\nRIGHT JOIN \n    (SELECT repository_name, SUM(diff_rows_added+diff_rows_deleted) as total_contribution\n    FROM pull_request AS pr\n        INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n        INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n    WHERE pr.integrity_errors IS NULL\n      AND diff_rows_added+diff_rows_deleted!=0\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n    GROUP BY repository_name) AS total\nON total.repository_name=personal.repository_name\nORDER BY personal.repository_name",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Contributions per participant",
      "transformations": [
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "contributor_name",
            "emptyValue": "empty",
            "rowField": "repository_name",
            "valueField": "contribution_percent"
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "hidden"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total lead time"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PRs count"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": true,
                  "viz": true
                }
              },
              {
                "id": "unit",
                "value": "locale"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 23,
        "w": 24,
        "x": 0,
        "y": 110
      },
      "id": 51,
      "options": {
        "barRadius": 0,
        "barWidth": 0.8,
        "fullHighlight": false,
        "groupWidth": 0.8,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "horizontal",
        "showValue": "never",
        "stacking": "normal",
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "12.0.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n),\nreview_timings AS (\nSELECT \n  grouping_field AS \"$group_by_field\",\n  PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (merged_date-LEAST(COALESCE(initial_commit_date, shared_for_review_date), shared_for_review_date)))) AS total_lead_time,\n  COUNT(*) AS prs_count,\n  PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY GREATEST(EXTRACT(EPOCH FROM (shared_for_review_date-initial_commit_date)), 0)) AS development_time,\n  PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (first_reaction_date-shared_for_review_date))) AS first_reaction_got_in,\n  PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (rework_completed_date-first_reaction_date))) AS rework_time,\n  PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (merged_date-last_action_date))) AS idle_after_approve,\n\n\n  PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY GREATEST(EXTRACT(EPOCH FROM (shared_for_review_date-initial_commit_date)), 0))\n        +PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (first_reaction_date-shared_for_review_date)))\n        +PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (rework_completed_date-first_reaction_date)))\n        +PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (merged_date-last_action_date))) AS \"ordering_rank\"\nFROM (SELECT\n        CASE WHEN '$group_by_field'='author' \n          THEN\n            CASE \n              WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n              WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n              ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n            END\n          ELSE pr.repository_name \n        END as grouping_field,\n        pr.merged_date,\n        pr.shared_for_review_date,\n        pr.initial_commit_date AS initial_commit_date,\n        pr_aggregations.first_reaction_date,\n        GREATEST(COALESCE(pr_aggregations.last_commit_date, pr_aggregations.last_approval_date), COALESCE(pr_aggregations.last_approval_date, pr_aggregations.last_commit_date)) AS rework_completed_date,\n        GREATEST(pr_aggregations.last_approval_date, pr_aggregations.last_commit_date) as last_action_date\n    FROM pull_request AS pr\n      INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n    WHERE pr.integrity_errors IS NULL\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n    GROUP BY 1, pr.project_name, pr.repository_name, pr.pull_request_number, pr.merged_date, pr.shared_for_review_date, pr.initial_commit_date, pr_aggregations.first_reaction_date, pr_aggregations.last_approval_date, pr_aggregations.last_commit_date\n) AS activity_stats\nGROUP BY 1\nORDER BY PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY GREATEST(EXTRACT(EPOCH FROM (shared_for_review_date-initial_commit_date)), 0))\n        +PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (first_reaction_date-shared_for_review_date)))\n        +PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (rework_completed_date-first_reaction_date)))\n        +PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (merged_date-last_action_date)))\n),\nranked_review_timings AS (\n    SELECT \n        $group_by_field,\n        total_lead_time,\n        prs_count,\n        development_time,\n        first_reaction_got_in,\n        rework_time,\n        idle_after_approve,\n        ordering_rank,\n        ROW_NUMBER() OVER (ORDER BY ordering_rank DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY ordering_rank ASC) AS rank_asc\n    FROM review_timings\n    WHERE prs_count>$min_prs_count_sample_size\n)\nSELECT \n  $group_by_field,\n  total_lead_time AS \"Total lead time\",\n  prs_count AS \"PRs count\",\n  development_time AS \"Development time\",\n  first_reaction_got_in AS \"First reaction got in\",\n  rework_time AS \"Rework time\",\n  idle_after_approve AS \"Idle after approve\"\nFROM ranked_review_timings\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY ordering_rank DESC;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Typical PR timings",
      "type": "barchart"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 133
      },
      "id": 22,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "light-blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 19,
            "w": 12,
            "x": 0,
            "y": 245
          },
          "id": 1,
          "options": {
            "barRadius": 0,
            "barWidth": 0.8,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "horizontal",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "dataset": "`stinky-socks`",
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH data AS (\n   SELECT \n      CASE WHEN '$group_by_field'='author' \n         THEN\n            CASE \n            WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n            END\n         ELSE pr.repository_name \n      END as grouping_field,\n      COUNT(*) as prs_count\n   FROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   GROUP BY 1\n),\nranked_data AS (\n    SELECT \n        grouping_field,\n        prs_count,\n        ROW_NUMBER() OVER (ORDER BY prs_count DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY prs_count ASC) AS rank_asc\n    FROM data\n    WHERE prs_count>$min_prs_count_sample_size\n)\nSELECT \n grouping_field AS \"${group_by_field}\",\n prs_count AS \"PRs count\"\nFROM ranked_data\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY prs_count;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "author",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "name": "author",
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "table": "pull_request"
            }
          ],
          "title": "Total PRs count",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "light-blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 19,
            "w": 12,
            "x": 12,
            "y": 245
          },
          "id": 35,
          "options": {
            "barRadius": 0,
            "barWidth": 0.8,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "horizontal",
            "showValue": "auto",
            "stacking": "normal",
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH data AS (\n   SELECT \n      CASE WHEN '$group_by_field'='author' \n         THEN\n            CASE \n            WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n            END\n         ELSE pr.repository_name \n      END as grouping_field,\n      SUM(diff_rows_added+diff_rows_deleted) as total_diff,\n   COUNT(*) AS prs_count\n   FROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   GROUP BY 1\n),\nranked_data AS (\n    SELECT \n        grouping_field,\n        prs_count,\n        total_diff,\n        ROW_NUMBER() OVER (ORDER BY total_diff DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY total_diff ASC) AS rank_asc\n    FROM data\n    WHERE prs_count>$min_prs_count_sample_size\n)\nSELECT \n grouping_field AS \"${group_by_field}\",\n total_diff AS \"Total diff\",\n prs_count AS \"PRs count\"\nFROM ranked_data\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY \"Total diff\";",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Total changes",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "light-blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 264
          },
          "id": 2,
          "options": {
            "barRadius": 0,
            "barWidth": 0.8,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "horizontal",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "dataset": "`stinky-socks`",
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH data AS (\n   SELECT \n      CASE WHEN '$group_by_field'='author' \n         THEN\n            CASE \n            WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n            END\n         ELSE pr.repository_name \n      END as grouping_field,\n      PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY diff_rows_added+diff_rows_deleted) as diff_size,\n      COUNT(*) AS prs_count\n   FROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND diff_rows_added+diff_rows_deleted!=0\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   GROUP BY 1\n),\nranked_data AS (\n    SELECT \n        grouping_field,\n        prs_count,\n        diff_size,\n        ROW_NUMBER() OVER (ORDER BY diff_size DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY diff_size ASC) AS rank_asc\n    FROM data\n    WHERE prs_count>$min_prs_count_sample_size\n)\nSELECT \n grouping_field AS \"${group_by_field}\",\n diff_size AS \"Diff size\",\n prs_count AS \"PRs count\"\nFROM ranked_data\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY \"Diff size\";",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "author",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "name": "author",
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "table": "pull_request"
            }
          ],
          "title": "PR diff size",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "light-blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  },
                  {
                    "id": "unit",
                    "value": "locale"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 264
          },
          "id": 13,
          "options": {
            "barRadius": 0,
            "barWidth": 0.8,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "horizontal",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "dataset": "`stinky-socks`",
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH data AS (\n   SELECT \n      CASE WHEN '$group_by_field'='author' \n         THEN\n            CASE \n            WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n            END\n         ELSE pr.repository_name \n      END as grouping_field,\n      AVG(EXTRACT(EPOCH FROM (merged_date-shared_for_review_date))) AS approval_speed,\n      COUNT(*) AS prs_count\n   FROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND diff_rows_added+diff_rows_deleted!=0\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   GROUP BY 1\n),\nranked_data AS (\n    SELECT \n        grouping_field,\n        prs_count,\n        approval_speed,\n        ROW_NUMBER() OVER (ORDER BY approval_speed DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY approval_speed ASC) AS rank_asc\n    FROM data\n    WHERE prs_count>$min_prs_count_sample_size\n)\nSELECT \n grouping_field AS \"${group_by_field}\",\n approval_speed AS \"Approval speed\",\n prs_count AS \"PRs count\"\nFROM ranked_data\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY \"Approval speed\";",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "author",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "name": "author",
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "table": "pull_request"
            }
          ],
          "title": "Usually got approval in",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "light-blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 282
          },
          "id": 14,
          "options": {
            "barRadius": 0,
            "barWidth": 0.8,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "horizontal",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "dataset": "`stinky-socks`",
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH data AS (\n   SELECT \n      CASE WHEN '$group_by_field'='author' \n         THEN\n            CASE \n            WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n            END\n         ELSE pr.repository_name \n      END as grouping_field,\n      AVG(requested_reviewers_count) AS reviewers_count,\n      COUNT(*) AS prs_count\n   FROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND diff_rows_added+diff_rows_deleted!=0\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   GROUP BY 1\n),\nranked_data AS (\n    SELECT \n        grouping_field,\n        prs_count,\n        reviewers_count,\n        ROW_NUMBER() OVER (ORDER BY reviewers_count DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY reviewers_count ASC) AS rank_asc\n    FROM data\n    WHERE prs_count>$min_prs_count_sample_size\n)\nSELECT \n grouping_field AS \"${group_by_field}\",\n reviewers_count AS \"Reviewers count\",\n prs_count AS \"PRs count\"\nFROM ranked_data\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY \"Reviewers count\";",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "author",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "name": "author",
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "table": "pull_request"
            }
          ],
          "title": "Average reviewers count",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "light-blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 282
          },
          "id": 20,
          "options": {
            "barRadius": 0,
            "barWidth": 0.8,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "horizontal",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "dataset": "`stinky-socks`",
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n),\ndata AS (\n   SELECT \n      CASE WHEN '$group_by_field'='author' \n         THEN\n            CASE \n            WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n            WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n            ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n            END\n         ELSE pr.repository_name \n      END as grouping_field,\n      AVG(participants_comments_count) AS participants_comments_count,\n      COUNT(*) AS prs_count\n   FROM pull_request AS pr\n      INNER JOIN aggregations AS pr_aggregations\n                   ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                       AND pr.repository_name = pr_aggregations.repository_name\n                       AND pr.pull_request_number = pr_aggregations.pull_request_number\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\n   WHERE pr.integrity_errors IS NULL\n      AND diff_rows_added+diff_rows_deleted!=0\n      AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n      AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n      AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n      AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n      AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n      AND ($include_bots_activities OR NOT author.is_bot_user)\n      AND ($include_self_reviews OR pr.has_other_human_approval)\n   GROUP BY 1\n),\nranked_data AS (\n    SELECT \n        grouping_field,\n        prs_count,\n        participants_comments_count,\n        ROW_NUMBER() OVER (ORDER BY participants_comments_count DESC) AS rank_desc,\n        ROW_NUMBER() OVER (ORDER BY participants_comments_count ASC) AS rank_asc\n    FROM data\n    WHERE prs_count>$min_prs_count_sample_size\n)\nSELECT \n grouping_field AS \"${group_by_field}\",\n participants_comments_count AS \"Participants comments count\",\n prs_count AS \"PRs count\"\nFROM ranked_data\nWHERE rank_desc <= $ranked_samples_size OR rank_asc <= $ranked_samples_size\nORDER BY \"Participants comments count\";",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [
                      {
                        "name": "author",
                        "type": "functionParameter"
                      }
                    ],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "name": "author",
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "table": "pull_request"
            }
          ],
          "title": "Average comments count",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 1800
                  },
                  {
                    "color": "red",
                    "value": 3600
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Approval speed"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 300
          },
          "id": 18,
          "options": {
            "barRadius": 0,
            "barWidth": 0.95,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "multi",
              "sort": "none"
            },
            "xField": "Diff size",
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT\n   CASE\n      WHEN diff_rows_added+diff_rows_deleted<500 THEN 100 * round((diff_rows_added+diff_rows_deleted) / 100)\n      WHEN diff_rows_added+diff_rows_deleted<5000 THEN 1000 * round((diff_rows_added+diff_rows_deleted) / 1000)\n      WHEN diff_rows_added+diff_rows_deleted<50000 THEN 10000 * round((diff_rows_added+diff_rows_deleted) / 10000)\n      ELSE 50000 * round((diff_rows_added+diff_rows_deleted) / 50000)\n   END as \"Diff size\",\n   PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (merged_date-shared_for_review_date))) AS \"Approval speed\",\n   COUNT(*) AS \"PRs count\"\nFROM pull_request AS pr\n   INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n   INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NULL\n   AND diff_rows_added+diff_rows_deleted!=0\n   AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n   AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n   AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n   AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n   AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n   AND ($include_bots_activities OR NOT author.is_bot_user)\n   AND ($include_self_reviews OR pr.has_other_human_approval)\nGROUP BY 1\nORDER BY \"Diff size\"",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Approval time per PR size",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 1800
                  },
                  {
                    "color": "red",
                    "value": 3600
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Approval speed"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 300
          },
          "id": 19,
          "options": {
            "barRadius": 0,
            "barWidth": 0.95,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            },
            "xField": "Reviewers count",
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT\n   requested_reviewers_count  AS \"Reviewers count\",\n   PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (merged_date-shared_for_review_date))) AS \"Approval speed\",\n   COUNT(*) AS \"PRs count\"\nFROM pull_request AS pr\n   INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n   INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NULL\n   AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n   AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n   AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n   AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n   AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n   AND ($include_bots_activities OR NOT author.is_bot_user)\n   AND ($include_self_reviews OR pr.has_other_human_approval)\nGROUP BY requested_reviewers_count\nORDER BY requested_reviewers_count",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Approval time per reviewers count",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 1800
                  },
                  {
                    "color": "red",
                    "value": 3600
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Approval speed"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 310
          },
          "id": 30,
          "options": {
            "barRadius": 0,
            "barWidth": 0.95,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            },
            "xField": "Diff size",
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\nSELECT\n   CASE\n      WHEN diff_rows_added+diff_rows_deleted<500 THEN 100 * round((diff_rows_added+diff_rows_deleted) / 100)\n      WHEN diff_rows_added+diff_rows_deleted<5000 THEN 1000 * round((diff_rows_added+diff_rows_deleted) / 1000)\n      WHEN diff_rows_added+diff_rows_deleted<50000 THEN 10000 * round((diff_rows_added+diff_rows_deleted) / 10000)\n      ELSE 50000 * round((diff_rows_added+diff_rows_deleted) / 50000)\n   END as \"Diff size\",\n   PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY participants_comments_count) AS \"Participants comments count\"\nFROM pull_request AS pr\n   INNER JOIN aggregations AS pr_aggregations\n                  ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                     AND pr.repository_name = pr_aggregations.repository_name\n                     AND pr.pull_request_number = pr_aggregations.pull_request_number\n   INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n   INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NULL\n   AND diff_rows_added+diff_rows_deleted!=0\n   AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n   AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n   AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n   AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n   AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n   AND ($include_bots_activities OR NOT author.is_bot_user)\n   AND ($include_self_reviews OR pr.has_other_human_approval)\nGROUP BY 1\nORDER BY \"Diff size\"",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Comments count per PR size",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 1800
                  },
                  {
                    "color": "red",
                    "value": 3600
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Approval speed"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "PRs count"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 310
          },
          "id": 44,
          "options": {
            "barRadius": 0,
            "barWidth": 0.95,
            "fullHighlight": false,
            "groupWidth": 0.7,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            },
            "xField": "Reviewers count",
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "WITH aggregations AS\n(SELECT pr.team_name,\n         pr.project_name,\n         pr.repository_name,\n         pr.pull_request_number,\n         SUM(CASE WHEN participant.is_bot_user THEN 0 ELSE pr_participant.comments_count END) AS participants_comments_count,\n         MIN(CASE\n                  WHEN participant.is_bot_user OR pr_participant.first_reaction_date > pr.merged_date OR\n                     pr_participant.first_reaction_date < pr.shared_for_review_date THEN NULL\n                  ELSE pr_participant.first_reaction_date END) AS first_reaction_date,\n         MAX(CASE WHEN participant.is_bot_user THEN NULL ELSE pr_participant.last_approval_date END) AS last_approval_date,\n         CASE WHEN pr.last_commit_date > pr.shared_for_review_date THEN pr.last_commit_date ELSE NULL END AS last_commit_date\n   FROM pull_request AS pr\n            LEFT JOIN pull_request_participant AS pr_participant ON pr.team_name = pr_participant.team_name AND pr.project_name = pr_participant.project_name AND pr.repository_name = pr_participant.repository_name AND pr.pull_request_number = pr_participant.pull_request_number\n            LEFT JOIN actor AS shadowed_participant ON shadowed_participant.id = pr_participant.participant_id\n            LEFT JOIN actor AS participant ON COALESCE(shadowed_participant.merged_with_id, shadowed_participant.id) = participant.id\n   GROUP BY pr.team_name, pr.project_name, pr.repository_name, pr.pull_request_number,\n            pr.last_commit_date, pr.shared_for_review_date\n)\nSELECT\n   requested_reviewers_count  AS \"Reviewers count\",\n   PERCENTILE_CONT($percentile) WITHIN GROUP (ORDER BY participants_comments_count) AS \"Participants comments count\",\n   COUNT(*) AS \"PRs count\"\nFROM pull_request AS pr\n   INNER JOIN aggregations AS pr_aggregations\n                  ON pr.team_name = pr_aggregations.team_name AND pr.project_name = pr_aggregations.project_name\n                     AND pr.repository_name = pr_aggregations.repository_name\n                     AND pr.pull_request_number = pr_aggregations.pull_request_number\n   INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n   INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NULL\n   AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n   AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n   AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n   AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n   AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n   AND ($include_bots_activities OR NOT author.is_bot_user)\n   AND ($include_self_reviews OR pr.has_other_human_approval)\nGROUP BY requested_reviewers_count\nORDER BY requested_reviewers_count",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Comments count per reviewers count",
          "type": "barchart"
        }
      ],
      "title": "Per $group_by_field glance stats",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 134
      },
      "id": 39,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "pull_request"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "View Pull Request",
                        "url": "${__data.fields.view_url}"
                      }
                    ]
                  },
                  {
                    "id": "custom.width",
                    "value": 301
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "view_url"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "integrity_errors"
                },
                "properties": [
                  {
                    "id": "custom.inspect",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "0"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 1060
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "integrity_errors"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 48
          },
          "id": 49,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT CONCAT(pr.project_name, '/', pr.repository_name, '/', pr.pull_request_number) as pull_request, pr.view_url, pr.integrity_errors\nFROM pull_request AS pr\n   INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n   INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NOT NULL\n   AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n   AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n   AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n   AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n   AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n   AND ($include_bots_activities OR NOT author.is_bot_user)\n   AND ($include_self_reviews OR pr.has_other_human_approval)",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "PRs having integrity errors",
          "transformations": [
            {
              "id": "extractFields",
              "options": {
                "format": "json",
                "source": "integrity_errors"
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "pull_request_number"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "View Pull Request",
                        "url": "${__data.fields.view_url}"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "view_url"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 161
          },
          "id": 31,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "project_name"
              }
            ]
          },
          "pluginVersion": "12.0.5",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT \n   pr.*, \n   CASE \n      WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n      WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n      ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\n   END AS author,\n   author.team_role AS author_team_role\nFROM pull_request AS pr\n   INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n   INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n   AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))\n   AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n   AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\n   AND (COALESCE($pr_author) IS NULL OR author.id IN ($pr_author))\n   AND ($include_bots_activities OR NOT author.is_bot_user)\n   AND ($include_self_reviews OR pr.has_other_human_approval)",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Raw Pull Requests including integrity errors",
          "type": "table"
        }
      ],
      "title": "Raw data",
      "type": "row"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": "NULL",
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
        },
        "definition": "SELECT DISTINCT team_name \nFROM pull_request\nWHERE pull_request.integrity_errors IS NULL\nAND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \nORDER BY team_name",
        "includeAll": true,
        "label": "Team",
        "multi": true,
        "name": "team_name",
        "options": [],
        "query": "SELECT DISTINCT team_name \nFROM pull_request\nWHERE pull_request.integrity_errors IS NULL\nAND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \nORDER BY team_name",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "allValue": "NULL",
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
        },
        "definition": "SELECT DISTINCT (repository_name) \nFROM pull_request \nWHERE \n    pull_request.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR team_name IN ($team_name))    \nORDER BY repository_name",
        "includeAll": true,
        "label": "Repository name",
        "multi": true,
        "name": "repository_name",
        "options": [],
        "query": "SELECT DISTINCT (repository_name) \nFROM pull_request \nWHERE \n    pull_request.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR team_name IN ($team_name))    \nORDER BY repository_name",
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "allValue": "NULL",
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
        },
        "definition": "SELECT \n    DISTINCT author_role\nFROM pull_request \nWHERE pull_request.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR pull_request.team_name IN ($team_name))    \n    AND (COALESCE($repository_name) IS NULL OR repository_name IN ($repository_name))\nUNION\nSELECT \n    DISTINCT author.team_role\nFROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE author.team_role IS NOT NULL \n    AND pr.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))    \n    AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n",
        "description": "",
        "includeAll": true,
        "label": "Author role",
        "multi": true,
        "name": "pr_author_role",
        "options": [],
        "query": "SELECT \n    DISTINCT author_role\nFROM pull_request \nWHERE pull_request.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR pull_request.team_name IN ($team_name))    \n    AND (COALESCE($repository_name) IS NULL OR repository_name IN ($repository_name))\nUNION\nSELECT \n    DISTINCT author.team_role\nFROM pull_request AS pr\n      INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n      INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE author.team_role IS NOT NULL \n    AND pr.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))    \n    AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "allValue": "NULL",
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "e22e9e55-8040-415d-97be-c4a6a23429e8"
        },
        "definition": "SELECT \nDISTINCT \nauthor.id as __value, \nCASE \n    WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n    WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n    ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\nEND AS __text \nFROM pull_request AS pr\n    INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n    INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))    \n    AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n    AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\nORDER BY 2",
        "includeAll": true,
        "label": "PR author",
        "multi": true,
        "name": "pr_author",
        "options": [],
        "query": "SELECT \nDISTINCT \nauthor.id as __value, \nCASE \n    WHEN author.is_former_participant THEN CONCAT(CASE WHEN $show_real_names THEN author.login ELSE author.nickname END, ' (former participant)')\n    WHEN author.is_bot_user THEN CONCAT(author.login, ' (bot)')\n    ELSE CASE WHEN $show_real_names THEN author.login ELSE author.nickname END\nEND AS __text \nFROM pull_request AS pr\n    INNER JOIN actor AS shadowed_author ON shadowed_author.id = pr.author_id\n    INNER JOIN actor AS author ON COALESCE(shadowed_author.merged_with_id, shadowed_author.id)=author.id\nWHERE pr.integrity_errors IS NULL\n    AND $__timeFilter(LEAST(initial_commit_date, shared_for_review_date)) \n    AND (COALESCE($team_name) IS NULL OR pr.team_name IN ($team_name))    \n    AND (COALESCE($repository_name) IS NULL OR pr.repository_name IN ($repository_name))\n    AND (COALESCE($pr_author_role) IS NULL OR COALESCE(author.team_role, pr.author_role) IN ($pr_author_role))\nORDER BY 2",
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "repository_name",
          "value": "repository_name"
        },
        "includeAll": false,
        "label": "Group by",
        "name": "group_by_field",
        "options": [
          {
            "selected": true,
            "text": "Repository",
            "value": "repository_name"
          },
          {
            "selected": false,
            "text": "Author",
            "value": "author"
          }
        ],
        "query": "Repository : repository_name, Author : author",
        "type": "custom"
      },
      {
        "current": {
          "text": "False",
          "value": "False"
        },
        "includeAll": false,
        "label": "Include bots activities",
        "name": "include_bots_activities",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "False"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "True"
          }
        ],
        "query": "No : False,Yes : True",
        "type": "custom"
      },
      {
        "current": {
          "text": "True",
          "value": "True"
        },
        "includeAll": false,
        "label": "Include self-reviewed PRs",
        "name": "include_self_reviews",
        "options": [
          {
            "selected": false,
            "text": "No",
            "value": "False"
          },
          {
            "selected": true,
            "text": "Yes",
            "value": "True"
          }
        ],
        "query": "No : False,Yes : True",
        "type": "custom"
      },
      {
        "current": {
          "text": "0.75",
          "value": "0.75"
        },
        "description": "",
        "label": "Percentile",
        "name": "percentile",
        "options": [
          {
            "selected": false,
            "text": "50th percentile (mean)",
            "value": "0.50"
          },
          {
            "selected": true,
            "text": "75th percentile",
            "value": "0.75"
          },
          {
            "selected": false,
            "text": "90th percentile",
            "value": "0.90"
          },
          {
            "selected": false,
            "text": "95th percentile",
            "value": "0.95"
          },
          {
            "selected": false,
            "text": "99th percentile",
            "value": "0.99"
          },
          {
            "selected": false,
            "text": "100% values",
            "value": "1"
          }
        ],
        "query": "50th percentile (mean) : 0.50, 75th percentile : 0.75, 90th percentile : 0.90, 95th percentile : 0.95, 99th percentile : 0.99, 100% values : 1",
        "type": "custom"
      },
      {
        "current": {
          "text": "1w",
          "value": "1w"
        },
        "includeAll": false,
        "label": "Group by period",
        "name": "group_by_period",
        "options": [
          {
            "selected": false,
            "text": "Days",
            "value": "1d"
          },
          {
            "selected": true,
            "text": "Weeks",
            "value": "1w"
          },
          {
            "selected": false,
            "text": "Months",
            "value": "1M"
          },
          {
            "selected": false,
            "text": "Quarters",
            "value": "3M"
          },
          {
            "selected": false,
            "text": "Years",
            "value": "1y"
          }
        ],
        "query": "Days : 1d,  Weeks : 1w, Months : 1M, Quarters : 3M, Years : 1y",
        "type": "custom"
      },
      {
        "current": {
          "text": [
            "pr_lead_time"
          ],
          "value": [
            "pr_lead_time"
          ]
        },
        "label": "Display flow stats for",
        "multi": true,
        "name": "display_flow_stats_for",
        "options": [
          {
            "selected": true,
            "text": "PR Lead time",
            "value": "pr_lead_time"
          },
          {
            "selected": false,
            "text": "Development time",
            "value": "development_time"
          },
          {
            "selected": false,
            "text": "Time to first reaction",
            "value": "time_to_first_reaction"
          },
          {
            "selected": false,
            "text": "Rework time",
            "value": "rework_time"
          },
          {
            "selected": false,
            "text": "Idle after approve",
            "value": "idle_after_approve"
          }
        ],
        "query": "PR Lead time : pr_lead_time, Development time : development_time, Time to first reaction : time_to_first_reaction, Rework time : rework_time, Idle after approve : idle_after_approve",
        "type": "custom"
      },
      {
        "current": {
          "text": "False",
          "value": "False"
        },
        "description": "",
        "hide": 2,
        "label": "Show real names",
        "name": "show_real_names",
        "options": [
          {
            "selected": true,
            "text": "False",
            "value": "False"
          },
          {
            "selected": false,
            "text": "True",
            "value": "True"
          }
        ],
        "query": "False, True",
        "type": "custom"
      },
      {
        "current": {
          "text": "10",
          "value": "10"
        },
        "hide": 2,
        "name": "min_prs_count_sample_size",
        "query": "10",
        "skipUrlSync": true,
        "type": "constant"
      },
      {
        "current": {
          "text": "10",
          "value": "10"
        },
        "hide": 2,
        "name": "ranked_samples_size",
        "query": "10",
        "skipUrlSync": true,
        "type": "constant"
      }
    ]
  },
  "time": {
    "from": "now-1y",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "PR metrics",
  "uid": "dadf1ef8-d081-4d14-a1f3-82c235fc7fc1",
  "version": 1
}